USE MASTER
GO
IF EXISTS (SELECT * FROM SYSDATABASES WHERE NAME = 'TIKI')
DROP DATABASE TIKI
GO 
CREATE DATABASE TIKI
GO 
USE TIKI
GO
CREATE TABLE COMPANY(
  com_id int identity primary key,
	com_name nvarchar(50) not null,
)
GO
CREATE TABLE PUBLISHER(
  pub_id int identity primary key,
  pub_name nvarchar(50) not null
)
GO
CREATE TABLE CATEGORY(
  cat_id int identity primary key,
	cat_name nvarchar(50) not null
)
GO
CREATE TABLE AUTHOR(
	aut_id int identity primary key,
	aut_name nvarchar(100) not null
)
GO
CREATE TABLE BOOK(
  book_id int identity(1000,1) primary key,
  book_name nvarchar(100) not null,
  book_img nvarchar(100),
	book_price int,
	book_sale int,
	
	public_date date,
	width float,
	height float,
	page_number int,
	cover_type nvarchar(50),
  article nvarchar(MAX),
	translator nvarchar(200),
	
	aut_id int foreign key REFERENCES AUTHOR(aut_id),
	com_id int foreign key references COMPANY(com_id),
	pub_id int foreign key references PUBLISHER(pub_id),
	cat_id int foreign key references CATEGORY(cat_id),
)
GO
CREATE TABLE CUSTOMER(
  cus_usr varchar(12) primary key,
  cus_pwd varchar(20) not null,
  cus_name nvarchar(100) not null,
  cus_phone char(10),
  cus_address nvarchar(100),
)

GO
CREATE TABLE EMPLOYEE(
  emp_usr varchar(12) primary key,
  emp_pwd varchar(20) not null,
  emp_name nvarchar(100) not null,
  emp_phone char(10) not null,
  emp_address nvarchar(100),
  emp_role int not null
)
GO
CREATE TABLE ORDERS(
  ord_id int identity(100000,1) primary key,
  cus_urs varchar(12) foreign key references CUSTOMER(cus_usr),
  ord_timeup datetime,
  ord_timedown datetime,
  ord_address nvarchar(100) not null,
  ord_phone char(10) not null,
  ord_require nvarchar(100)
)
GO 
CREATE TABLE ORDER_DETAIL(
  ord_id int foreign key references ORDERS(ord_id),
  book_id int foreign key references BOOK(book_id),
  ord_quantity int not null,
  ord_price int not null,
  primary key(ord_id,book_id)
)
GO
CREATE TABLE EVALUATE(
  eva_id int identity primary key,
  cus_usr varchar(12) foreign key references CUSTOMER(cus_usr),
  book_id int foreign key references BOOK(book_id),
  eva_date datetime not null,
	eva_title nvarchar(MAX) not null,
  eva_content nvarchar(MAX) not null,
  eva_rate int not null,
	eva_imgs varchar,
)
GO

---------------- function ---------------------

-- ============================================
-- Author: Dang Lai
-- Create date: 9:00 20/12/12
-- Update date:
-- Update content:
-- Description: Thêm dữ liệu vào các bảng book, evaluate, authot,...
-- cào từ html tiki
-- ============================================
CREATE PROCEDURE SpInsertBook
(
	@book_name nvarchar(100), 
	@book_img nvarchar(100), 
	@book_price int, 
	@book_sale int, 
	@public_date date, 
	@width float,
	@height float,
	@page_number int, 
	@cover_type nvarchar(50), 
	@article nvarchar(MAX),
	@translator nvarchar(100),
	@aut_name nvarchar(100), 
	@com_name nvarchar(100), 
	@pub_name nvarchar(100), 
	@cat_name nvarchar(100)
)
AS
BEGIN 
  
	DECLARE @aut_id int, @com_id int, @pub_id int, @cat_id int, @book_id int;

IF NOT EXISTS (SELECT aut_id = @aut_id FROM AUTHOR WHERE aut_name = @aut_name) 
  INSERT INTO AUTHOR VALUES(@aut_name) SET @aut_id = IDENT_CURRENT('AUTHOR')

IF NOT EXISTS (SELECT com_id = @com_id FROM COMPANY WHERE com_name = @com_name) 
  INSERT INTO COMPANY VALUES(@com_name) SET @com_id = IDENT_CURRENT('COMPANY')

IF NOT EXISTS (SELECT pub_id = @pub_id FROM PUBLISHER WHERE pub_name = @pub_name) 
  INSERT INTO PUBLISHER VALUES(@pub_name) SET @pub_id = IDENT_CURRENT('PUBLISHER')

IF NOT EXISTS (SELECT cat_id = @cat_id FROM CATEGORY WHERE cat_name = @cat_name) 
  INSERT INTO CATEGORY VALUES(@cat_name) SET @cat_id = IDENT_CURRENT('CATEGORY')

	
	INSERT INTO BOOK VALUES (
    @book_name,
    @book_img,
    @book_price,
    @book_sale,
    @public_date,
    @width,
    @height,
    @page_number,
    @cover_type,
    @article,
    @translator,
    @aut_id,
    @com_id,
    @pub_id,
    @cat_id
  )
END
